apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
       
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-ws")
    compile("org.springframework:spring-core:4.2.3.RELEASE")

    // logging
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('com.lmax:disruptor:3.3.2')
    configurations {
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // utilities
    compile('org.apache.commons:commons-lang3:3.4')
    compile("com.googlecode.json-simple:json-simple:1.1.1")
    compile("com.sun.jersey:jersey-core:1.19")
    compile('commons-codec:commons-codec:1.10')
    compile('org.mapstruct:mapstruct-jdk8:1.0.0.CR2')
    compile("javax.activation:activation:1.1.1")
    compile('org.pegdown:pegdown:1.6.0')

    // Java Slang
    compile "io.javaslang:javaslang:2.0.1"

    // Javaslang Circuitbreaker
    compile "io.github.robwin:javaslang-circuitbreaker:0.5.0"

    // for diff
    testCompile('de.danielbechler:java-object-diff:0.93')
    testCompile('org.assertj:assertj-core:3.4.1')

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.hamcrest:hamcrest-core:1.3")
    testCompile("com.jayway.restassured:rest-assured:2.7.0")
    testRuntime("com.jayway.jsonpath:json-path:2.0.0") {
        exclude module: 'asm'
    }
    testRuntime("org.skyscreamer:jsonassert:1.3.0")

}



eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

